--- htmlwidgets.js	2020-05-03 12:47:34.000000000 +0200
+++ htmlwidgets-ajax.js	2020-05-03 12:47:54.000000000 +0200
@@ -571,13 +571,14 @@
   // Statically render all elements that are of this widget's class
   window.HTMLWidgets.staticRender = function() {
     var bindings = window.HTMLWidgets.widgets || [];
+
     forEach(bindings, function(binding) {
       var matches = binding.find(document.documentElement);
       forEach(matches, function(el) {
         var sizeObj = initSizing(el, binding);
 
-        if (hasClass(el, "html-widget-static-bound"))
-          return;
+        if (hasClass(el, "html-widget-static-bound")) { return; }
+
         el.className = el.className + " html-widget-static-bound";
 
         var initResult;
@@ -643,15 +644,33 @@
         }
 
         var scriptData = document.querySelector("script[data-for='" + el.id + "'][type='application/json']");
+
         if (scriptData) {
-          var data = JSON.parse(scriptData.textContent || scriptData.text);
-          // Resolve strings marked as javascript literals to objects
-          if (!(data.evals instanceof Array)) data.evals = [data.evals];
-          for (var k = 0; data.evals && k < data.evals.length; k++) {
-            window.HTMLWidgets.evaluateStringMember(data.x, data.evals[k]);
+          if (scriptData.src) {
+            $.ajax({
+              url: scriptData.src,
+              success: function(data) { 
+                if (!(data.evals instanceof Array)) data.evals = [data.evals];
+                for (var k = 0; data.evals && k < data.evals.length; k++) {
+                  window.HTMLWidgets.evaluateStringMember(data.x, data.evals[k]);
+                }
+                binding.renderValue(el, data.x, initResult);
+                evalAndRun(data.jsHooks.render, initResult, [el, data.x]);
+              },
+              error: function() {
+                $("#rEffplots-header").html("Error loading data.");
+              }
+            });
+          } else {
+            var data = JSON.parse(scriptData.textContent || scriptData.text);
+            // Resolve strings marked as javascript literals to objects
+            if (!(data.evals instanceof Array)) data.evals = [data.evals];
+            for (var k = 0; data.evals && k < data.evals.length; k++) {
+              window.HTMLWidgets.evaluateStringMember(data.x, data.evals[k]);
+            }
+            binding.renderValue(el, data.x, initResult);
+            evalAndRun(data.jsHooks.render, initResult, [el, data.x]);
           }
-          binding.renderValue(el, data.x, initResult);
-          evalAndRun(data.jsHooks.render, initResult, [el, data.x]);
         }
       });
     });
